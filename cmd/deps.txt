docker exec -w/sim/HIP py_g5_docker mkdir -p build
docker exec -w/sim/HIP/build py_g5_docker cmake ..
docker exec -w/sim/HIP/build py_g5_docker make -j3
docker exec -w/sim/HIP/build py_g5_docker make install

docker exec -w/sim/rocBLAS py_g5_docker mkdir -p build/release
docker exec -w/sim/rocBLAS/build/release -eCXX=/opt/rocm/bin/hcc py_g5_docker cmake -DCMAKE_CXX_FLAGS="--amdgpu-target=gfx801" ../..
docker exec -w/sim/rocBLAS/build/release -eVERBOSE=1 py_g5_docker make -j3
docker exec -w/sim/rocBLAS/build/release py_g5_docker make install

docker exec -w/sim/hipBLAS py_g5_docker mkdir -p build/release
docker exec -w/sim/hipBLAS/build/release -eCXX=/opt/rocm/bin/hcc py_g5_docker cmake -DCMAKE_CXX_FLAGS="--amdgpu-target=gfx801" ../..
docker exec -w/sim/hipBLAS/build/release -eVERBOSE=1 py_g5_docker make -j3
docker exec -w/sim/hipBLAS/build/release py_g5_docker make install

docker exec -w/sim/rocm-cmake py_g5_docker mkdir -p build
docker exec -w/sim/rocm-cmake/build py_g5_docker cmake ..
docker exec -w/sim/rocm-cmake/build py_g5_docker cmake --build . --target install

docker exec -w/sim/MIOpenGEMM py_g5_docker mkdir -p build
docker exec -w/sim/MIOpenGEMM/build py_g5_docker cmake ..
docker exec -w/sim/MIOpenGEMM/build py_g5_docker make miopengemm
docker exec -w/sim/MIOpenGEMM/build py_g5_docker make install

docker exec -w/sim/MIOpen py_g5_docker mkdir -p build
docker exec -w/sim/MIOpen/build -eCXX=/opt/rocm/hcc/bin/hcc py_g5_docker cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/opt/rocm -DMIOPEN_BACKEND=HIP -DCMAKE_PREFIX_PATH="/opt/rocm/hip;/opt/rocm/hcc;/opt/rocm/rocdl;/opt/rocm/miopengemm;/opt/rocm/hsa" -DMIOPEN_CACHE_DIR=/sim/.cache/miopen -DMIOPEN_AMDGCN_ASSEMBLER_PATH=/opt/rocm/opencl/bin -DCMAKE_CXX_FLAGS="-isystem /usr/include/x86_64-linux-gnu" ..
docker exec -w/sim/MIOpen/build -eVERBOSE=1 py_g5_docker make -j3
docker exec -w/sim/MIOpen/build py_g5_docker make install

docker exec -w/sim/DNNMark py_g5_docker ./setup.sh HIP
docker exec -w/sim/DNNMark/build py_g5_docker make
# DNNMark: Add --amdgpu-target dcmake_cxx_flags then ./setup.sh HIP
# DNNMark: make
